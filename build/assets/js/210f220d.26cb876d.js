"use strict";(self.webpackChunkmcphub_docs=self.webpackChunkmcphub_docs||[]).push([[258],{3318:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"advanced/storage-encryption","title":"Storage & Encryption","description":"MCPHub provides enterprise-grade encryption for sensitive data with a simplified, secure key management system. This guide explains how your sensitive user variables and configuration data are protected.","source":"@site/docs/advanced/storage-encryption.md","sourceDirName":"advanced","slug":"/advanced/storage-encryption","permalink":"/mcphub-docs/docs/latest/advanced/storage-encryption","draft":false,"unlisted":false,"editUrl":"https://github.com/mahesh-rajamani/mcphub-docs/tree/main/docs/advanced/storage-encryption.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Using MCPHub with LangChain","permalink":"/mcphub-docs/docs/latest/advanced/langchain-integration"},"next":{"title":"Admin API Direct Access","permalink":"/mcphub-docs/docs/latest/advanced/admin-api-direct"}}');var s=i(4848),t=i(8453);const l={},a="Storage & Encryption",o={},c=[{value:"Overview",id:"overview",level:2},{value:"What Gets Encrypted",id:"what-gets-encrypted",level:3},{value:"What Stays in Plain Text",id:"what-stays-in-plain-text",level:3},{value:"Encryption System",id:"encryption-system",level:2},{value:"Algorithm &amp; Security",id:"algorithm--security",level:3},{value:"Key Hierarchy",id:"key-hierarchy",level:3},{value:"1. Base Key (<code>MCP_ENCRYPTION_KEY</code>)",id:"1-base-key-mcp_encryption_key",level:4},{value:"2. Tenant Keys",id:"2-tenant-keys",level:4},{value:"3. Variable Keys",id:"3-variable-keys",level:4},{value:"Security Benefits",id:"security-benefits",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Setting Up Encryption",id:"setting-up-encryption",level:3},{value:"Default Fallback (Development Only)",id:"default-fallback-development-only",level:3},{value:"Example Configuration",id:"example-configuration",level:3},{value:"How Encryption Works",id:"how-encryption-works",level:2},{value:"Complete Flow Example",id:"complete-flow-example",level:3},{value:"Multi-Tenant Example",id:"multi-tenant-example",level:3},{value:"Storage Format",id:"storage-format",level:2},{value:"Database Storage",id:"database-storage",level:3},{value:"Example Storage",id:"example-storage",level:3},{value:"Security Features",id:"security-features",level:2},{value:"Tenant Isolation",id:"tenant-isolation",level:3},{value:"Integrity Protection",id:"integrity-protection",level:3},{value:"Backward Compatibility",id:"backward-compatibility",level:3},{value:"Key Management",id:"key-management",level:2},{value:"Production Deployment",id:"production-deployment",level:3},{value:"Key Rotation (Future)",id:"key-rotation-future",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security Recommendations",id:"security-recommendations",level:3},{value:"Compliance",id:"compliance",level:3},{value:"Development vs Production",id:"development-vs-production",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Verification",id:"verification",level:3},{value:"Related Topics",id:"related-topics",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"storage--encryption",children:"Storage & Encryption"})}),"\n",(0,s.jsx)(n.p,{children:"MCPHub provides enterprise-grade encryption for sensitive data with a simplified, secure key management system. This guide explains how your sensitive user variables and configuration data are protected."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"MCPHub automatically encrypts sensitive information to keep your credentials and secrets secure using industry-standard AES-256-GCM encryption with tenant isolation."}),"\n",(0,s.jsx)(n.h3,{id:"what-gets-encrypted",children:"What Gets Encrypted"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sensitive User Variables"}),": API keys, tokens, passwords marked as ",(0,s.jsx)(n.code,{children:"sensitive: true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OAuth Tokens"}),": Access tokens, refresh tokens from OAuth 2.0 flows"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"JWT Tokens"}),": Authentication tokens from JWT flows"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Credentials"}),": Connection strings, passwords"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"what-stays-in-plain-text",children:"What Stays in Plain Text"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration Structure"}),": MCP schemas, endpoint definitions, parameter descriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Non-Sensitive Variables"}),": Public URLs, default values, numeric settings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metadata"}),": Tags, descriptions, version information"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"encryption-system",children:"Encryption System"}),"\n",(0,s.jsx)(n.h3,{id:"algorithm--security",children:"Algorithm & Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Algorithm"}),": AES-256-GCM (Advanced Encryption Standard with Galois Counter Mode)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Size"}),": 256 bits for maximum security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Derivation"}),": PBKDF2WithHmacSHA256 with 100,000 iterations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": Built-in authentication to prevent tampering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Salt"}),": 32 bytes (256 bits) unique per encryption"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IV"}),": 12 bytes (96 bits) generated per encryption"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-hierarchy",children:"Key Hierarchy"}),"\n",(0,s.jsx)(n.p,{children:"MCPHub uses a three-level key hierarchy for maximum security:"}),"\n",(0,s.jsxs)(n.h4,{id:"1-base-key-mcp_encryption_key",children:["1. Base Key (",(0,s.jsx)(n.code,{children:"MCP_ENCRYPTION_KEY"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Root key for the entire system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": Never used directly - only for deriving tenant keys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"}),": Set via environment variable"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"2-tenant-keys",children:"2. Tenant Keys"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Unique key per tenant for complete isolation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Derivation"}),": ",(0,s.jsx)(n.code,{children:"PBKDF2(MCP_ENCRYPTION_KEY, tenantId, 100000 iterations)"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": Never used directly - only for deriving variable keys"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"3-variable-keys",children:"3. Variable Keys"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Unique key per variable per tenant"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Derivation"}),": ",(0,s.jsx)(n.code,{children:'PBKDF2(tenantKey, "variableName:randomSalt", 50000 iterations)'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": This is the actual key used for AES-256-GCM encryption"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security-benefits",children:"Security Benefits"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tenant Isolation"}),": Each tenant gets cryptographically unique keys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Variable Isolation"}),": Each variable gets a unique key, even with the same name"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Salt Randomness"}),": Each encryption uses a fresh random salt"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tamper Protection"}),": GCM provides authentication and integrity checking"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-encryption",children:"Setting Up Encryption"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Required Environment Variable:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Production deployment\nexport MCP_ENCRYPTION_KEY="your-secure-64-character-production-key-here"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Requirements:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimum Length"}),": 32 characters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Recommended"}),": 64+ characters for production"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Format"}),": Any string (base64 recommended for strong entropy)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"default-fallback-development-only",children:"Default Fallback (Development Only)"}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"MCP_ENCRYPTION_KEY"})," is not set, MCPHub generates a deterministic fallback key:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Seed: "mcphub-dev-fallback-encryption-key"\nKey: SHA256(seed) \u2192 base64 encoded\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u26a0\ufe0f Warning"}),": The fallback key is only safe for development - never use in production!"]}),"\n",(0,s.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Strong production key (recommended)\nexport MCP_ENCRYPTION_KEY="abcd1234567890abcd1234567890abcd1234567890abcd1234567890abcd1234"\n\n# Alternative: Generate a random key\nexport MCP_ENCRYPTION_KEY=$(openssl rand -base64 48)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"how-encryption-works",children:"How Encryption Works"}),"\n",(0,s.jsx)(n.h3,{id:"complete-flow-example",children:"Complete Flow Example"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Scenario"}),": Encrypting ",(0,s.jsx)(n.code,{children:'apiKey="secret123"'})," for tenant ",(0,s.jsx)(n.code,{children:"shop_rite"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Base Key"}),": ",(0,s.jsx)(n.code,{children:"MCP_ENCRYPTION_KEY"})," (from environment)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tenant Key"}),": ",(0,s.jsx)(n.code,{children:'PBKDF2(baseKey, "shop_rite", 100000)'})," \u2192 ",(0,s.jsx)(n.code,{children:"tenantKey_ShopRite"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Random Salt"}),": Generated for this encryption \u2192 ",(0,s.jsx)(n.code,{children:'"abc123def456"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Variable Key"}),": ",(0,s.jsx)(n.code,{children:'PBKDF2(tenantKey_ShopRite, "apiKey:abc123def456", 50000)'})," \u2192 ",(0,s.jsx)(n.code,{children:"variableKey_ApiKey"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Encryption"}),": ",(0,s.jsx)(n.code,{children:'AES-256-GCM(variableKey_ApiKey, "secret123")'})," \u2192 ",(0,s.jsx)(n.code,{children:"encryptedValue"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Storage"}),": ",(0,s.jsx)(n.code,{children:"base64(encryptedValue):abc123def456"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"multi-tenant-example",children:"Multi-Tenant Example"}),"\n",(0,s.jsx)(n.p,{children:"For two tenants with the same variable name:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Tenant: default\nBase Key: MCP_ENCRYPTION_KEY\nTenant Key: PBKDF2(baseKey, "default", 100000) \u2192 unique key A\nVariable Key: PBKDF2(keyA, "apiKey:salt1", 50000) \u2192 unique key A1\n\n# Tenant: shop_rite  \nBase Key: MCP_ENCRYPTION_KEY (same base key)\nTenant Key: PBKDF2(baseKey, "shop_rite", 100000) \u2192 unique key B\nVariable Key: PBKDF2(keyB, "apiKey:salt2", 50000) \u2192 unique key B1\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Result"}),": Even with the same variable name, each tenant gets completely different encryption keys."]}),"\n",(0,s.jsx)(n.h2,{id:"storage-format",children:"Storage Format"}),"\n",(0,s.jsx)(n.h3,{id:"database-storage",children:"Database Storage"}),"\n",(0,s.jsx)(n.p,{children:"Encrypted values are stored with this format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"base64(iv+encryptedData):base64(salt)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-storage",children:"Example Storage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- User Variables Table\nCREATE TABLE user_variables (\n    id UUID PRIMARY KEY,\n    tenant_id VARCHAR(255) NOT NULL,\n    variable_name VARCHAR(255) NOT NULL,\n    variable_type VARCHAR(50) NOT NULL,\n    encrypted_value TEXT,        -- For sensitive variables\n    plain_value TEXT,           -- For non-sensitive variables\n    is_sensitive BOOLEAN DEFAULT FALSE,\n    salt VARCHAR(255),          -- Base64 encoded salt\n    created_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Example data\nINSERT INTO user_variables VALUES (\n    gen_random_uuid(),\n    'shop_rite',\n    'apiKey',\n    'token',\n    'SGVsbG8gV29ybGQ=:YWJjZGVmZ2hpams=',  -- encrypted_value:salt\n    NULL,                                    -- plain_value (null for sensitive)\n    TRUE,                                    -- is_sensitive\n    'YWJjZGVmZ2hpams=',                     -- salt\n    NOW()\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security-features",children:"Security Features"}),"\n",(0,s.jsx)(n.h3,{id:"tenant-isolation",children:"Tenant Isolation"}),"\n",(0,s.jsx)(n.p,{children:"Each tenant is completely isolated:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Separate Keys"}),": Each tenant gets unique derived keys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cross-Tenant Protection"}),": Tenant A cannot decrypt Tenant B's data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Derivation"}),": Uses tenant ID as salt in PBKDF2"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"integrity-protection",children:"Integrity Protection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": GCM mode provides built-in authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tamper Detection"}),": Modified ciphertext fails decryption"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validation"}),": System can verify data integrity without decryption"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"backward-compatibility",children:"Backward Compatibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Detection"}),": System automatically detects encrypted vs plain text values"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Graceful Fallback"}),": Non-encrypted values are returned as-is"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Migration"}),": Can encrypt existing plain text values"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-management",children:"Key Management"}),"\n",(0,s.jsx)(n.h3,{id:"production-deployment",children:"Production Deployment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Production environment setup\nexport MCP_ENCRYPTION_KEY="your-production-key-here"\nexport MCP_ENVIRONMENT="production"\n\n# Verify encryption is working\ncurl -X GET "http://localhost:8080/admin/default/test-mcp" \\\n  -H "Authorization: Bearer admin-token"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"key-rotation-future",children:"Key Rotation (Future)"}),"\n",(0,s.jsx)(n.p,{children:"Key rotation infrastructure is in place but not fully implemented:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Future implementation\nencryptionService.rotateKeysForTenant("shop_rite", oldKey, newKey);\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Process will involve:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generate new base key"}),"\n",(0,s.jsx)(n.li,{children:"Derive new tenant keys"}),"\n",(0,s.jsx)(n.li,{children:"Re-encrypt all sensitive data"}),"\n",(0,s.jsx)(n.li,{children:"Update database atomically"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsx)(n.p,{children:"Monitor these encryption metrics:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Encryption Performance"}),": Latency for encrypt/decrypt operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Usage"}),": Access patterns and error rates"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Storage Growth"}),": Encrypted data volume"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Rates"}),": Failed decryption attempts"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"security-recommendations",children:"Security Recommendations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Strong Keys"}),": Use 64+ character keys for production"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Storage"}),": Store keys in secure secret management systems"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment Separation"}),": Use different keys per environment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Regular Rotation"}),": Plan for periodic key rotation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Monitoring"}),": Monitor encryption/decryption performance and errors"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"compliance",children:"Compliance"}),"\n",(0,s.jsx)(n.p,{children:"MCPHub encryption supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GDPR"}),": Data encryption and tenant isolation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"HIPAA"}),": PHI encryption with access controls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SOC 2"}),": Security controls and audit trails"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PCI DSS"}),": Cardholder data protection"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development-vs-production",children:"Development vs Production"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Optional - uses fallback key if not set\nexport MCP_ENCRYPTION_KEY="dev-key-32-chars-minimum"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Production:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Required - use strong key from secrets manager\nexport MCP_ENCRYPTION_KEY="${SECRET_MANAGER_KEY}"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Encryption Key Too Short:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Error: Encryption key too short. Key must be at least 32 characters.\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Use a longer key (64+ characters recommended)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Decryption Failures:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Error: Failed to decrypt value for tenant default variable apiKey\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Verify the same ",(0,s.jsx)(n.code,{children:"MCP_ENCRYPTION_KEY"})," is used for encrypt/decrypt"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Missing Environment Key:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Warning: No encryption key found. Using fallback key generation for development.\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Set ",(0,s.jsx)(n.code,{children:"MCP_ENCRYPTION_KEY"})," environment variable"]}),"\n",(0,s.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,s.jsx)(n.p,{children:"Test encryption is working:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Check if encryption service is active\ncurl -X GET "http://localhost:8080/health" | grep encryption\n\n# Test variable encryption/decryption\ncurl -X POST "http://localhost:8080/admin/default/test-mcp" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"userVariables": [{"name": "test", "value": "secret", "sensitive": true}]}\'\n'})}),"\n",(0,s.jsx)(n.h2,{id:"related-topics",children:"Related Topics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/mcphub-docs/docs/latest/creating-mcps/authentication",children:"Authentication Configuration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/mcphub-docs/docs/latest/creating-mcps/variables/overview",children:"User Variables Overview"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../configuration/multi-tenant.md",children:"Multi-Tenant Configuration"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);